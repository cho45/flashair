- thumnail.cgi は同時アクセスすると高確率で刺さる
-- シーケンシャルに読む必要あり

ウェブサービスへのポストシーケンス

1. (サーバサイドにコード書く前提)
- ファイルを選択
- ファイル内容をダウンロードし、localStorage + メモリ内に保持
-- localStorage は 5MB 以内なので、つかえなくてもメモリのがつかえるように
- インターネットへの疎通が回復するまで待つ
- ファイル内容を外部サーバに post
- 外部サーバは session に内容を保存
- ウェブサービスのAPIをゆっくりよぶ

2. (サーバサイドにコードを書かない前提)
- ファイルを選択
- ファイル内容をダウンロードし、localStorage + メモリ内に保持
-- localStorage は 5MB 以内なので、つかえなくてもメモリのがつかえるように
- インターネットへの疎通が回復するまで待つ
- 疎通したら外部ネットワークへ iframe を設置
- iframe へ postMessage が通ることを確認 (ping を postMessage)
- iframe へファイル内容を postMessage
- iframe は localStorage にデータを保存する
- 遷移する
- localStorage からデータを読みだし、ウェブサービスのAPIを呼ぶ (がんばって自力で multipart をつくる必要あり)
-- たぶんバイナリそのままで送れないので、サーバサイドかFlashが必要…
-- base64 での送信に対応しているサービスならサーバサイドいらない

3. (アプリと連携する場合)
- AP を FlashAir に着替える (API でたぶんできる)
- FlashAir に切り替えたらユーザに選択を促す
- 選択された画像をダウンロードし、保存
- FlashAir から切断する
- インターネットを疎通するのを待つ
- インターネットへ疎通したら送信する

→ 普通にリンクロングタップしてダウンコしたほうが早い。


localStorage ->
  Android 2.3: 2.5MB
  iOS 5: 5MB

サムネのサイズ
  写真埋め込みのもの: 30kb ぐらい (Android だと 50枚ぐらいが限界)
  さらにcanvasで縮小: 5kb ぐらい  (Android だと 300枚ぐらいが限界)

